// Generated by CoffeeScript 1.9.3
(function() {
  "use strict";
  var $, Smoothscroll,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  $ = global.$;

  module.exports = Smoothscroll = (function() {
    var _$body, _defaults;

    Smoothscroll.addEasing = function(name, func) {
      return $.easing[name] = func;
    };

    Smoothscroll.canselScroll = function() {
      return _$body.stop();
    };

    _defaults = {
      speed: 700,
      easingName: null,
      offset: 0,
      onScrollBefore: function(el) {},
      onScrollAfter: function(el) {}
    };

    _$body = $('html, body');

    Smoothscroll.prototype._configure = function(el, opts) {
      this.$el = $(el);
      this.opts = $.extend({}, _defaults, opts);
      if (this.$el.attr('href') !== '#') {
        return this.$target = $(this.$el.attr('href'));
      }
    };

    function Smoothscroll(el1, opts) {
      this.el = el1;
      this._handleClick = bind(this._handleClick, this);
      this._configure(this.el, opts);
      this.events();
    }

    Smoothscroll.prototype.scroll = function() {
      var base, val;
      if (this.$target == null) {
        return;
      }
      if (typeof (base = this.opts).onScrollBefore === "function") {
        base.onScrollBefore(this.el);
      }
      val = this.$target.offset().top - this.opts.offset;
      _$body.stop(true, true).animate({
        scrollTop: val
      }, {
        duration: this.opts.speed,
        easing: this.opts.easingName
      }).promise().done((function(_this) {
        return function() {
          var base1;
          return typeof (base1 = _this.opts).onScrollAfter === "function" ? base1.onScrollAfter(_this.el) : void 0;
        };
      })(this));
      return this;
    };

    Smoothscroll.prototype.events = function() {
      this.$el.on('click.smoothscroll', this._handleClick);
      return this;
    };

    Smoothscroll.prototype.unbind = function() {
      this.$el.off('click.smoothScroll');
      return this;
    };

    Smoothscroll.prototype._handleClick = function(ev) {
      ev.preventDefault();
      return this.scroll();
    };

    return Smoothscroll;

  })();

}).call(this);
